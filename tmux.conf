unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
bind-key r source-file ~/.tmux.conf

# VI like copying
unbind [
bind Escape copy-mode

# Make Esc key faster in Vim
set -sg escape-time 0

# Open splits and windows in the same working directory
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

unbind p
bind p paste-buffer

bind -t vi-copy 'v' begin-selection

# Use osx clipboard
unbind y
bind-key -t vi-copy 'y' copy-pipe "reattach-to-user-namespace pbcopy"

# Automatic renaming of the window title

# shell
set -g default-command /bin/zsh
set -g default-shell /bin/zsh

# start with window 1 (instead of 0)
set -g base-index 1

# auto renumber window numbers
set-option -g renumber-windows on

# Make copy/paste on osx behave better.
set-option -g default-command "reattach-to-user-namespace -l zsh"

# start with pane 1
set -g pane-base-index 1

# screen mode
set -g default-terminal "xterm-256color"

# send xterm keys
set-window-option -g xterm-keys on

# use vi mode
setw -g mode-keys vi
set -g status-keys vi
setw -g utf8 on

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# window status
setw -g automatic-rename on
setw -g monitor-activity on
